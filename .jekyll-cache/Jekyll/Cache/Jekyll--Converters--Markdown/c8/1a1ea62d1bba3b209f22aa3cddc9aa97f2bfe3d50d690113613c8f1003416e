I"­<p>The Problem: Alice has to send information to Bob. But the transfer should achieve the following:</p>
<ul>
  <li>It should be tamper-proof. If modified it should be detected by Bob</li>
  <li>It should be private or encrypted. No one but Bob can read it. Bob should be able to decrypt it.</li>
  <li>It should be collission resistant, i.e. brute force methods should not be able to replicate it.</li>
  <li>It should be fixed length? compressed? anthing else?</li>
</ul>

<p>Hash functions are a way to make your message tamper-proof . What makes them tampter-proof? The property that even a sligh change in input changes the output quite radically. Given a message, you run it through the checksum algorithm, which the recipient knows. The recipient also receives the checksum through some independent source. If any single bit of the message was modified, youâ€™d know.</p>

<p>Checksums need not themselves contain the message, so they can be publicly displayed, and also made to have an output of fixed length.</p>

<p>Given a checksum algorithm and a checksum, can we find the original message? This is not possible, as a given checksum can correspond to many different inputs; even though collission is rare.</p>

<p>Checksums are fast</p>

<p>Hash functions are one-way functions whose inverse is difficult to calculate.</p>

<p>Terms to understand: SHA1, SHA256, ROT13, B64 encoding, BCrypt, RSA, Diffie Helman, PGP, Public/Private keys</p>

:ET